from trex_stl_lib.api import *

from testpmd_addr import *

# Wild local MACs
mac_localport0="$SRC_WEST_MAC_ADDRESS"
mac_localport1="$SRC_EAST_MAC_ADDRESS"

class STLS1(object):

    def __init__ (self):
        self.fsize  =64; # the size of the packet
        self.number = 0

    def create_stream (self, direction = 0):
        size = self.fsize - 4; # HW will add 4 bytes ethernet FCS
        dport = 1026 + self.number
        self.number = self.number + 1
        if direction == 0:
            base_pkt =  Ether(dst=mac_telco0,src=mac_localport0)/IP(src="16.0.0.1",dst=ip_telco0)/UDP(dport=dport,sport=1026)
        else:
            base_pkt =  Ether(dst=mac_telco1,src=mac_localport1)/IP(src="16.1.0.1",dst=ip_telco1)/UDP(dport=dport,sport=1026)
        pad = (60 - len(base_pkt)) * 'x'

        return STLStream(
            packet =
            STLPktBuilder(
                pkt = base_pkt / pad
            ),
            mode = STLTXCont())


    def get_streams (self, direction = 0, **kwargs):
        # create multiple streams, one stream per core...
        s = []
        for i in range($NUM_OF_CPUS-1):
            s.append(self.create_stream(direction = direction))
        return s

# dynamic load - used for trex console or simulator
def register():
    return STLS1()
